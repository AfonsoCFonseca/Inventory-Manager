{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.tsx","webpack:///./src/Utils.tsx","webpack:///external \"React\"","webpack:///./src/components/item/Item.tsx","webpack:///external \"ReactDOM\"","webpack:///./public/scss/style.scss?afa0","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./public/scss/style.scss","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./src/components/inventory/Inventory.tsx","webpack:///./src/drawer/drawer.tsx","webpack:///./src/components/item/potions/Potion.tsx","webpack:///./src/components/item/weapons/Weapon.tsx","webpack:///./src/components/item/weapons/WeaponsArmory.tsx","webpack:///./src/components/item/armor/Armor.ts","webpack:///./src/components/item/armor/ArmorArmory.ts","webpack:///./src/components/player/player.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","slotsLength","addRandomItem","randomItemType","utils","randomInt","stackSize","pos","inventory","getNextPositionAvailable","Potion","Weapon","Armor","player","Player","ReactDOM","render","className","Inventory","ref","el","type","min","max","defaultValue","onChange","event","newLength","setSlotsLength","changeInventorySlotSize","parseInt","target","id","onClick","console","log","state","setSlots","document","getElementById","fillInventory","text","date","Date","getHours","getMinutes","getSeconds","message","div","getElementsByClassName","innerHTML","scrollTop","scrollHeight","capFirstLetter","charAt","toUpperCase","slice","Math","floor","random","React","position","quantity","selected","equipped","this","specific","removeItem","setState","clearSelected","selectedItem","api","content","default","options","exported","locals","memo","isOldIE","Boolean","window","all","atob","getTarget","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","modulesToDom","list","length","part","css","media","sourceMap","push","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","setAttribute","insert","Error","appendChild","textStore","replaceText","index","replacement","filter","join","applyToSingletonTag","remove","obj","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","applyToTag","removeAttribute","btoa","concat","unescape","encodeURIComponent","JSON","stringify","firstChild","singleton","singletonCounter","update","styleIndex","parentNode","removeStyleElement","newObj","base","newList","toString","j","___CSS_LOADER_API_IMPORT___","useSourceMap","map","item","cssMapping","sourceMapping","base64","data","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","mediaQuery","Component","props","super","slots","equippedPostion","isFull","newSlots","splice","updatePositionOfItems","isEmpty","slot","undefined","allSlots","Draw","emptySlot","Fragment","selectedItemScreenButtons","drawSelectedItemScreen","drawInventory","imageFile","imgSrc","equippedClass","itemSelected","src","buttons","use","equip","Potion_Type","Item","potion_type","getName","getImageIcon","addItem","drink","throwError","decrementQuantity","error","weapon_type","replace","currentWeapon","getWeaponStats","damage","durability","range","speed","attack","sword","bow","dagger","gun","axe","Weapon_Type","Axe","Gun","Sword","Bow","Dagger","arrayOfUnusedItems","currentArmorPiece","armorSet","checkAvailableArmorPieces","armorValue","weight","currentItem","chest","ring","boots","belt","legs","shoulders","hands","health","mana","dexterity","strength","armor","weapon","usedWeapon","calculateAttack","weaponAttack","potion","incrementStats"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\n\r\nimport \"../public/scss/style.scss\";\r\n\r\nimport { Inventory } from \"./components/inventory/Inventory\";\r\nimport { Item } from \"./components/item/Item\";\r\nimport { Potion, Potion_Type } from \"./components/item/potions/Potion\";\r\nimport { Weapon } from \"./components/item/weapons/Weapon\"\r\nimport { Armor } from \"./components/item/armor/Armor\"\r\nimport { Player } from \"./components/player/player\"\r\nimport { utils } from \"./Utils\";\r\n\r\nlet slotsLength: number = 30;\r\n\r\nexport let inventory: Inventory;\r\nexport let player = new Player()\r\n/* \r\n    When the Component mounts the DOM, it fills the inventory of random Items\r\n    Log the number of items added to inventory\r\n   */\r\nfunction fillInventory(): void {\r\n  for (let i = 0; i < slotsLength; i++) {\r\n    if (i < 25) {\r\n      addRandomItem()\r\n    }\r\n  }\r\n}\r\n\r\n/* \r\n    The main render of the page, sets on the element \"example\" the inventory, setup Div and\r\n    the logs of each action\r\n   */\r\nReactDOM.render(\r\n  <div className=\"interface\">\r\n    <Inventory ref={el => (inventory = el)} slotsLength={slotsLength} />\r\n    {drawSetupDiv()}\r\n    <div className=\"logs\"></div>\r\n  </div>,\r\n  document.getElementById(\"example\")\r\n);\r\n\r\nfillInventory();\r\n\r\n\r\n/* \r\n    Draws the setup on the render of the sliders and every developement buttons\r\n   */\r\nfunction drawSetupDiv(): JSX.Element {\r\n  return (\r\n    <div className=\"setup\">\r\n      <div className=\"slidecontainer\">\r\n        <input\r\n          type=\"range\"\r\n          min=\"10\"\r\n          max=\"40\"\r\n          defaultValue={slotsLength}\r\n          onChange={event =>\r\n            changeInventorySlotSize(parseInt(event.target.value))\r\n          }\r\n          className=\"slider\"\r\n          id=\"slotRange\"\r\n        />\r\n      </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => addRandomItem()}>Add Random</button>\r\n        <button onClick={() => console.log( inventory.state )}>Log</button>\r\n        <button onClick={() => clear()}>Clear</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* \r\n    Eveytime the range slider is moved the value of the slots size changes and\r\n    renders the new inventory\r\n   */\r\nfunction changeInventorySlotSize(newLength: number): void {\r\n  slotsLength = newLength;\r\n  inventory.setSlotsLength(newLength);\r\n}\r\n\r\n/* \r\n    Functions call everytime an random Item need to be created\r\n    it will randomize between Potio, Weapon or Armor\r\n   */\r\nfunction addRandomItem(): void {\r\n  let randomItemType = utils.randomInt(3, 1);\r\n  let stackSize = utils.randomInt(1, 10);\r\n  let pos = inventory.getNextPositionAvailable();\r\n  if (typeof pos == \"number\") {\r\n    switch( randomItemType ){\r\n      case 1: \r\n        new Potion( pos, stackSize);\r\n      break;\r\n      case 2: \r\n        new Weapon( pos );\r\n      break;\r\n      case 3:\r\n        new Armor( pos );\r\n      break;\r\n    }\r\n  }\r\n}\r\n/* \r\n    Clears the full inventory to an empty array\r\n   */\r\nfunction clear(): void {\r\n  inventory.setSlots([]);\r\n}\r\n","export let utils = {\r\n  log(text: string, type: string = \"\"): void {\r\n    let date: Date | string = new Date();\r\n    date = `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n    let message = `<p class='message ${type}'>${date} - ${text}</p>`;\r\n    var div = document.getElementsByClassName(\"logs\")[0];\r\n    div.innerHTML += message;\r\n    div.scrollTop = div.scrollHeight;\r\n  },\r\n  capFirstLetter(text: string): string {\r\n    if( text ) return text.charAt(0).toUpperCase() + text.slice(1);\r\n    else return \"\"\r\n  },\r\n  randomInt(max: number, min: number): number {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n};","module.exports = React;","import { MouseEvent } from \"react\";\r\nimport { inventory } from \"../../index\";\r\n\r\nexport interface ItemInterface {\r\n  quantity: number;\r\n  type: string;\r\n  imgSrc: string;\r\n  position: number;\r\n  equipped: boolean | null\r\n  delete(): void;\r\n  use(): void;\r\n}\r\n\r\n/* \r\n    This abstract class represents each Item that is inserted in the inventory. \r\n    Got only the common specifications of the Item that are created.\r\n    It's used only for extension of child classes like Potions and Weapons\r\n   */\r\nexport abstract class Item implements ItemInterface {\r\n  quantity: number; //Units by Item with stack size limited to 64\r\n  type: string; //What type represents, Potion, Weapon, Armor\r\n  imgSrc: string; //name of the jpg file\r\n  position: number; //the position represented on the inventory slots array\r\n  selected: boolean = false;\r\n  name: string;\r\n  equipped: boolean | null = null // used only for weapons or armor\r\n\r\n  constructor(type: string, position: number, quantity?: number) {\r\n    this.type = type;\r\n    this.position = position;\r\n    this.quantity = quantity || 1;\r\n  }\r\n\r\n  /* \r\n    LimitQuantity is used the my the child class with the purpose of checking if it's\r\n    reaching the last unit of the item, if so returns true. It's possible to send the value \r\n    of the units by parameter, if the user by choice decide to consume more then 1 unit\r\n   */\r\n  protected isLimitQuantity(specific?: number): boolean {\r\n    if ((specific && this.quantity < specific) || this.quantity < 1)\r\n      return false;\r\n    else return true;\r\n  }\r\n  /* \r\n    Decrements the quantity of the item, where the default value will be 1, if no parameter was send\r\n    Calls the function that deletes ( if needed ) the item from the inventory and setstate the class\r\n    so it can render with the new values\r\n   */\r\n  protected decrementQuantity(specific?: number): void {\r\n    this.quantity--;\r\n    if (this.quantity == 0){\r\n      inventory.removeItem(this);\r\n    }\r\n    inventory.setState({})\r\n  }\r\n\r\n  delete() {}\r\n\r\n  use() {}\r\n\r\n  /* \r\n    This function sets the clicked Item to the Item and Inventory class as selected item\r\n    and then sets the state of Inventory, so it can renders the frame around the item \r\n   */\r\n  itemSelected() {\r\n    inventory.clearSelected();\r\n    this.selected = true;\r\n    inventory.setState({ selectedItem: this });\r\n  }\r\n}\r\n","module.exports = ReactDOM;","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(module.id, content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = {};\n\nfunction modulesToDom(moduleId, list, options) {\n  for (var i = 0; i < list.length; i++) {\n    var part = {\n      css: list[i][1],\n      media: list[i][2],\n      sourceMap: list[i][3]\n    };\n\n    if (stylesInDom[moduleId][i]) {\n      stylesInDom[moduleId][i](part);\n    } else {\n      stylesInDom[moduleId].push(addStyle(part, options));\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (moduleId, list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  moduleId = options.base ? moduleId + options.base : moduleId;\n  list = list || [];\n\n  if (!stylesInDom[moduleId]) {\n    stylesInDom[moduleId] = [];\n  }\n\n  modulesToDom(moduleId, list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    if (!stylesInDom[moduleId]) {\n      stylesInDom[moduleId] = [];\n    }\n\n    modulesToDom(moduleId, newList, options);\n\n    for (var j = newList.length; j < stylesInDom[moduleId].length; j++) {\n      stylesInDom[moduleId][j]();\n    }\n\n    stylesInDom[moduleId].length = newList.length;\n\n    if (stylesInDom[moduleId].length === 0) {\n      delete stylesInDom[moduleId];\n    }\n  };\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"p{font-family:Verdana, Geneva, sans-serif}h3{font-family:Verdana, Geneva, sans-serif}button{cursor:pointer;border-radius:5px;margin-right:5px;margin-left:5px;background-color:#f8e5c5;color:#303030;font-size:13px;font-weight:bold}button:hover{background-color:#fff3dd}.interface{background-color:#fff6e6;position:absolute;height:100%}.interface>.logs{margin:20px;height:120px;background-color:white;border-radius:5px;border:1px solid #d1d1d1;padding:15px;overflow-y:scroll}.interface>.logs>.message{color:#303030;margin:0;margin-bottom:5px}.interface>.logs>.messagetype{color:red}.interface>.inventory{margin:20px;max-width:600px;background-color:#f8e5c5;padding:10px;border-radius:5px;border:1px solid #d1d1d1;height:320px}.interface>.inventory>.inventory-slot{width:50px;height:50px;padding:2px;display:inline-flex;flex-direction:column;margin:3px;border-radius:10px;border:2px #303030 solid;background-color:#6f6a61;cursor:pointer}.interface>.inventory>.inventory-slot:hover{border:2px #b8a994 solid;background-color:#c5c5c5}.interface>.inventory>.inventory-slot.empty{background-color:#fff3dd;font-weight:bold}.interface>.inventory>.inventory-slot.empty:hover{border:2px #706a61 solid}.interface>.inventory>.inventory-slot.equipped{background-color:red;border:2px red solid}.interface>.inventory>.inventory-slot.selected{background-color:white}.interface>.inventory>.inventory-slot>.stack{font-size:10px;height:100%;position:relative}.interface>.inventory>.inventory-slot>.stack>.equipped-style{width:15px;position:absolute;background-color:white;border-radius:25px;padding:1px;top:-6px;left:-6px;border:1px solid #303030}.interface>.inventory>.inventory-slot>.stack>p{position:absolute;margin:0;width:100%;height:100%}.interface>.inventory>.inventory-slot>.stack>.item-name{color:#303030;text-align:center;display:flex;align-items:center;justify-content:center;font-size:13px}.interface>.inventory>.inventory-slot>.stack>.quantity{display:flex;color:white;align-items:flex-end;text-align:right}.interface>.inventory>.inventory-slot>.stack>.icon{border-radius:10px}.interface .item-menu{width:100%;margin-top:15px;height:50px}.interface .item-menu>button{width:110px;height:25px}.interface .item-menu>h3{color:#303030;text-align:center;margin:0}.interface .item-menu>.item-menu-text{width:100%;text-align:center}.interface .item-menu>.item-menu-text>p{font-size:13px;color:#303030}.interface .item-menu>.item-menu-buttons{display:flex;justify-content:center;align-items:center}.interface>.setup{margin-left:20px;margin-right:20px}.interface>.setup>.buttons{margin-top:20px}.interface>.setup>.buttons>button{width:110px;height:45px}.interface>.setup .slidecontainer{width:100%}.interface>.setup .slidecontainer>p{color:#303030;margin-bottom:5px;margin-left:5px;font-size:12px}.interface>.setup .slidecontainer>.slider{-webkit-appearance:none;appearance:none;width:50%;height:15px;border-radius:5px;background:white;outline:none;opacity:0.7;-webkit-transition:0.2s;transition:opacity 0.2s;border:1px solid #d1d1d1}.interface>.setup .slidecontainer>.slider:hover{opacity:1}.interface>.setup .slidecontainer>.slider::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:25px;height:25px;border-radius:50%;background:#f8e5c5;border:1px solid #d1d1d1;cursor:pointer}.interface>.setup .slidecontainer>.slider::-moz-range-thumb{width:25px;height:25px;border-radius:50%;background:#f8e5c5;border:1px solid #d1d1d1;cursor:pointer}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    for (var i = 0; i < modules.length; i++) {\n      var item = [].concat(modules[i]);\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot).concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","import * as React from \"react\";\r\n\r\nimport { Potion, Potion_Type } from \"../item/potions/Potion\";\r\nimport { Item } from \"../item/Item\";\r\nimport { Draw } from \"../../drawer/drawer\";\r\nimport { utils } from \"../../Utils\";\r\n\r\ninterface IInventoryState {\r\n  slots: Item[];\r\n  slotsLength: number;\r\n  selectedItem: Item;\r\n  equippedPostion: number | number[] | null;\r\n}\r\n\r\ninterface IInvetoryProps {\r\n  slotsLength: number;\r\n}\r\n\r\ninterface InventoryInterface {\r\n  addItem(item: Item): void;\r\n}\r\n\r\nexport class Inventory extends React.Component<IInvetoryProps, IInventoryState>\r\n  implements InventoryInterface {\r\n  /* \r\n    Sets the props slots to the state\r\n   */\r\n  constructor(props: IInvetoryProps) {\r\n    super(props);\r\n    this.state = {\r\n      slots: [],\r\n      equippedPostion: null,\r\n      selectedItem: null,\r\n      slotsLength: props.slotsLength\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  get slotsLength(): number {\r\n    return this.state.slotsLength;\r\n  }\r\n  get slots(): Item[] {\r\n    return this.state.slots;\r\n  }\r\n\r\n  get selectedItem(): Item {\r\n    return this.state.selectedItem;\r\n  }\r\n\r\n  /* \r\n    The setters from the core of the class. Slots are the structure of the class\r\n    and the slotsLength stands for the size of the inventory\r\n   */\r\n  public setSlots(slots: Item[]): void {\r\n    this.setState({ slots });\r\n  }\r\n  public setSlotsLength(newLength: number): void {\r\n    this.setState({\r\n      slotsLength: newLength\r\n    });\r\n  }\r\n\r\n  /* \r\n    Receives any type of Item, check if the inventory is full, if not, pushes the \r\n    specific Item to the state.slots array and \r\n    sets the new State for the slots. If return false, then the inventory is full\r\n   */\r\n  public addItem(item: Item): boolean {\r\n    if (!this.isFull()) {\r\n      let newSlots = this.state.slots;\r\n      newSlots.push(item);\r\n      this.setSlots(newSlots);\r\n      return true;\r\n    } else return false;\r\n  }\r\n\r\n  /* \r\n    Removes the Item from array of slots and sets the selectedItem to null\r\n    so the item-menu screen can refresh too. If item is equipped, declares the \r\n    variables to false, before deleting\r\n   */\r\n  public removeItem(item: Item): void {\r\n    let newSlots = this.slots;\r\n    newSlots.splice(item.position, 1);\r\n    this.updatePositionOfItems();\r\n    this.selectedItem.equipped = false\r\n    this.setState({\r\n      slots: newSlots,\r\n      selectedItem: null\r\n    });\r\n  }\r\n  /* \r\n    This function updates the position of each Item inside the inventory\r\n    this way it keeps the correct order when removeItem() is called\r\n   */\r\n  private updatePositionOfItems(): void {\r\n    for (var i = 0; i < this.slots.length; i++) {\r\n      this.slots[i].position = i;\r\n    }\r\n  }\r\n\r\n  /* \r\n    Iterates all the slots of the inventory untill an empty slot is\r\n    found or the index reach the end. Returns the index of the empty slot\r\n    or a false statement if there's no slots available\r\n   */\r\n  public getNextPositionAvailable(): number | boolean {\r\n    for (var i = 0; i < this.slotsLength; i++) {\r\n      if (this.isEmpty(this.slots[i])) return i;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public clearSelected(): void {\r\n    for (var i = 0; i < this.slots.length; i++) {\r\n      if (this.slots[i].selected) this.slots[i].selected = false;\r\n    }\r\n  }\r\n  /* \r\n    Checks if the inventory still have slots left to fill with items\r\n   */\r\n  private isFull(): boolean {\r\n    return this.state.slots.length > this.state.slotsLength;\r\n  }\r\n  /* \r\n    Checks if the selected slot, on inventory, exists or is empty\r\n   */\r\n  private isEmpty(slot: Item): boolean {\r\n    return slot === undefined;\r\n  }\r\n\r\n  /* \r\n    Iterates every position of the @state.slots, depending on the item.type\r\n    calls the specific function of the class Draw to return the JSX.Element \r\n   */\r\n  private drawInventory(): Array<JSX.Element> {\r\n    let allSlots: Array<JSX.Element> = [];\r\n    for (let i = 0; i < this.state.slotsLength; i++) {\r\n      if (this.state.slots[i]) {\r\n        allSlots.push(Draw.item(i, this.state.slots[i] ) );\r\n      } else allSlots.push(Draw.emptySlot(i));\r\n    }\r\n\r\n    return allSlots;\r\n  }\r\n\r\n  drawSelectedItemScreen() {\r\n    return (\r\n      <div className=\"item-menu\">\r\n        {this.selectedItem ? (\r\n          <React.Fragment>\r\n            <div className=\"item-menu-text\">\r\n              <p>\r\n                <b>Type: </b>\r\n                {utils.capFirstLetter(this.selectedItem.type)}\r\n                <b> Sub-type: </b>\r\n                {utils.capFirstLetter(this.selectedItem.name)}\r\n              </p>\r\n            </div>\r\n            {Draw.selectedItemScreenButtons(this)}\r\n          </React.Fragment>\r\n        ) : (\r\n          <h3>Inventory Manager</h3>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.drawSelectedItemScreen()}\r\n        <div className=\"inventory\">{this.drawInventory()}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Item } from \"../components/item/Item\";\r\nimport { Inventory } from \"../components/inventory/Inventory\";\r\nimport { utils } from \"../Utils\";\r\nimport { Weapon } from \"../components/item/weapons/Weapon\";\r\nimport { Armor } from \"../components/item/armor/Armor\";\r\n\r\nimport { player } from \"..\";\r\n\r\nexport class Draw {\r\n  static item(i: number, item: Item ): JSX.Element {\r\n    let imageFile = item.imgSrc;\r\n    let selected = item.selected ? \"selected\" : \"\";\r\n    let equippedClass:string = item.equipped ? \"equipped\": \"\" \r\n\r\n    return (\r\n      <div\r\n        key={`inventory-slot-${i} `}\r\n        className={`inventory-slot ${item.type} ${selected}`}\r\n        onClick={() => item.itemSelected()}\r\n      >\r\n        <div className=\"stack\">\r\n          { equippedClass ? \r\n            <img className=\"equipped-style\" src='../public/images/armorIcon.png'/>\r\n            : null }\r\n          <p className=\"quantity\">{item.quantity}</p>\r\n          <img className=\"icon\" src={`../../public/images/${imageFile}`}></img>\r\n          {/* <p className=\"item-name\">{item.name}</p> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  static emptySlot(i: number): JSX.Element {\r\n    return (\r\n      <div key={`inventory-slot-${i} `} className=\"inventory-slot empty\">\r\n        <div className=\"stack\">\r\n          <p className=\"item-name\">empty</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n /* \r\n   Returns different functions, texts and actions depending on thhe type of\r\n   Item is being used\r\n   */\r\n  static selectedItemScreenButtons(inventory: Inventory): JSX.Element {\r\n    let buttons: JSX.Element;\r\n    switch (inventory.selectedItem.type) {\r\n      case \"potion\":\r\n        buttons = (\r\n          <React.Fragment>\r\n            <button onClick={() => inventory.selectedItem.use()}>Drink</button>\r\n            <button>Inspect</button>\r\n            <button\r\n              onClick={() => inventory.removeItem(inventory.selectedItem)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n        break;\r\n      case \"weapon\":\r\n        buttons = (\r\n          <React.Fragment>\r\n            <button onClick={() => inventory.selectedItem.use()}>Attack</button>\r\n            <button onClick={ () => player.equip( inventory.selectedItem as Weapon ) }>Equip</button>\r\n            <button\r\n              onClick={() => inventory.removeItem(inventory.selectedItem)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n        break;\r\n      case \"armor\":\r\n        buttons = (\r\n          <React.Fragment>\r\n            <button onClick={() => inventory.selectedItem.use()}>Use</button>\r\n            <button onClick={ () => player.equip( inventory.selectedItem as Armor ) }>Equip</button>\r\n            <button\r\n              onClick={() => inventory.removeItem(inventory.selectedItem)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </React.Fragment>\r\n        );\r\n        break;\r\n    }\r\n\r\n    return <div className=\"item-menu-buttons\">{buttons}</div>;\r\n  }\r\n}\r\n","import { Item } from \"../Item\";\r\nimport { utils } from \"../../../Utils\";\r\nimport { inventory, player } from \"../../../index\";\r\n\r\nexport enum Potion_Type {\r\n  Health = 1,\r\n  Mana = 2,\r\n  Dexterity = 3\r\n}\r\n\r\ninterface PotionInterface {\r\n  potion_type: Potion_Type;\r\n  name: string;\r\n  imgSrc: string;\r\n  use(): void;\r\n}\r\n\r\nexport class Potion extends Item implements PotionInterface {\r\n  potion_type: Potion_Type;\r\n  name: string;\r\n  imgSrc: string;\r\n  value: number;\r\n\r\n  /* \r\n    A new potion is composed by the type refered at @Potion_Type, the position \r\n    on the array of inventory.slots, the units of each item ( with a stack size \r\n      of 64 ) and the name of the item ( default value setted ).\r\n    Gets the specific image from the class function and adds a new slot to the\r\n    inventory function by using @addItem()\r\n   */\r\n  constructor(\r\n    position: number,\r\n    quantity: number = 1,\r\n    potion_type?: Potion_Type\r\n  ) {\r\n    super(\"potion\", position, quantity);\r\n\r\n    this.potion_type = potion_type || utils.randomInt(3, 1);\r\n    this.name = this.getName(); // If needed, can be named\r\n    this.imgSrc = this.getImageIcon();\r\n\r\n    inventory.addItem(this);\r\n  }\r\n\r\n  /* \r\n    Switch the case depending on the type of potion and logs the effect\r\n    But first checks if the player is viable to use the potion\r\n   */\r\n  public use(): void | boolean {\r\n    if( player.isFull( this.potion_type ) )\r\n      return true\r\n      \r\n    switch (this.potion_type) {\r\n      case 1:\r\n        this.value = 20\r\n        utils.log(\"You healed for 20HP\");\r\n        player.drink( this )\r\n        break;\r\n      case 2:\r\n        this.value = 50\r\n        utils.log(\"You recovered 50 Points of Mana\");\r\n        player.drink( this )\r\n        break;\r\n      case 3:\r\n        this.value = 10 \r\n        utils.log(\"You recovered 10 Points of Dexterity\");\r\n        player.drink( this )\r\n        break;\r\n      default:\r\n        this.throwError(\"No potion type selected\");\r\n    }\r\n    console.log(this);\r\n    this.decrementQuantity();\r\n  }\r\n\r\n  private getImageIcon(): string {\r\n    switch (this.potion_type) {\r\n      case 1:\r\n        return \"healthPotion.jpg\";\r\n      case 2:\r\n        return \"manaPotion.jpg\";\r\n      case 3:\r\n        return \"dextPotion.jpg\";\r\n    }\r\n  }\r\n  private getName(): string {\r\n    switch (this.potion_type) {\r\n      case 1:\r\n        return \"Health Potion\";\r\n      case 2:\r\n        return \"Mana Potion\";\r\n      case 3:\r\n        return \"Dexterity Potion\";\r\n    }\r\n  }\r\n\r\n  private throwError(error: string): never {\r\n    utils.log(error, \"error\");\r\n    throw new Error(error);\r\n  }\r\n}\r\n","import { Item } from \"../Item\";\r\nimport { utils } from \"../../../Utils\";\r\nimport { inventory, player } from \"../../../index\";\r\nimport { axe, sword, gun, dagger, bow,Weapon_Type  } from './WeaponsArmory'\r\n\r\nexport interface WeaponInterface {\r\n    weapon_type: Weapon_Type,\r\n    durability: number,\r\n    damage: number,\r\n    range: number,\r\n    speed: number\r\n}\r\n\r\n\r\nexport class Weapon extends Item implements WeaponInterface{\r\n    public weapon_type: Weapon_Type;\r\n    durability: number;\r\n    damage: number;\r\n    range: number;\r\n    speed: number;\r\n    \r\n     /* \r\n   Sets the Super Class Item, names the item, gets the correct path for the icon,\r\n   gets the selected weapon WeaponStats from the script WeaponsArmory. This script keep record \r\n   of all weapons stats in JSON format. At the end of the constructor the item is added to the\r\n   Inventory class\r\n   */\r\n    constructor( position: number, weapon_type?:Weapon_Type ){\r\n        super(\"weapon\", position, 1);\r\n        \r\n        this.weapon_type = weapon_type || utils.randomInt(5, 1)\r\n        this.imgSrc = this.getImageIcon();\r\n        this.name = this.imgSrc.replace(/\\.[^/.]+$/, \"\")\r\n        \r\n        let currentWeapon = this.getWeaponStats();\r\n        this.damage = currentWeapon.damage\r\n        this.durability = currentWeapon.durability\r\n        this.range = currentWeapon.range\r\n        this.speed = currentWeapon.speed\r\n\r\n        inventory.addItem(this);\r\n    }\r\n\r\n    public use(): void {\r\n        player.equip( this )\r\n        player.attack()\r\n    }\r\n     /* \r\n    Goes to the armory of weapons and picks the desired WeaponInterface\r\n    according the construction of thhis class\r\n   */\r\n    private getWeaponStats(): WeaponInterface{\r\n        switch (this.weapon_type) {\r\n            case 1:\r\n                return sword\r\n            case 2:\r\n                return bow\r\n            case 3:\r\n                return dagger\r\n            case 4:\r\n                return gun\r\n            case 5:\r\n                return axe\r\n        }\r\n    }\r\n\r\n    private getImageIcon(): string {\r\n        switch (this.weapon_type) {\r\n            case 1:\r\n                return \"sword.jpg\";\r\n            case 2:\r\n                return \"bow.jpg\";\r\n            case 3:\r\n                return \"dagger.jpg\";\r\n            case 4:\r\n                return \"gun.jpg\";\r\n            case 5:\r\n                return \"axe.jpg\";\r\n        }\r\n      }\r\n}","import { WeaponInterface } from './Weapon'\r\n\r\nexport enum Weapon_Type {\r\n    Sword = 1,\r\n    Bow = 2,\r\n    Dagger = 3,\r\n    Gun = 4,\r\n    Axe = 5\r\n}\r\n\r\nexport let axe: WeaponInterface = {\r\n    weapon_type: Weapon_Type.Axe,\r\n    durability: 120,\r\n    damage: 130,\r\n    speed: 80,\r\n    range: 4,\r\n}\r\n\r\nexport let gun: WeaponInterface = {\r\n    weapon_type: Weapon_Type.Gun,\r\n    durability: 120,\r\n    damage: 120,\r\n    speed: 80,\r\n    range: 30,\r\n}\r\n\r\nexport let sword: WeaponInterface = {\r\n    weapon_type: Weapon_Type.Sword,\r\n    durability: 100,\r\n    damage: 95,\r\n    speed: 60,\r\n    range: 5,\r\n}\r\n\r\nexport let bow: WeaponInterface = {\r\n    weapon_type: Weapon_Type.Bow,\r\n    durability: 100,\r\n    damage: 110,\r\n    speed: 65,\r\n    range: 25,\r\n}\r\n\r\nexport let dagger: WeaponInterface = {\r\n    weapon_type: Weapon_Type.Dagger,\r\n    durability: 90,\r\n    damage: 80,\r\n    speed: 50,\r\n    range: 3,\r\n}","import { Item } from \"../Item\";\r\nimport { utils } from \"../../../Utils\";\r\nimport { armorSet  } from \"../armor/ArmorArmory\";\r\nimport { inventory, player } from \"../../../index\";\r\n\r\nexport interface ArmorInterface {\r\n    name: string,\r\n    armorValue: number,\r\n    durability: number,\r\n    weight: number\r\n}\r\n\r\n/* \r\n  this array controls if the item already exists in the Inventory,\r\n  us purpose is to not let the item repeat himself\r\n   */\r\nvar arrayOfUnusedItems: string[] = [ \r\n    'belt',\r\n    'boots',\r\n    'chest',\r\n    'hands',\r\n    'head',\r\n    'legs',\r\n    'ring',\r\n    'shoulders',\r\n]\r\n\r\nexport class Armor extends Item implements ArmorInterface {\r\n    name: string\r\n    armorValue: number\r\n    durability: number\r\n    weight: number\r\n     \r\n    constructor( position:number ){\r\n        super( \"armor\", position, 1 )\r\n        let currentArmorPiece = armorSet[this.checkAvailableArmorPieces()]\r\n        this.name = currentArmorPiece.name\r\n        this.armorValue = currentArmorPiece.armorValue\r\n        this.durability = currentArmorPiece.durability\r\n        this.weight = currentArmorPiece.weight\r\n        this.imgSrc = `${this.name}.jpg`\r\n\r\n        inventory.addItem( this )\r\n    }\r\n\r\n    public use(): void {\r\n        player.equip( this )\r\n    }\r\n\r\n    /* \r\n    Makes a random pick on the array, selecting the armor\r\n    piece selected, after, removes it from array.So it doesn't show repeated \r\n    on the inventory\r\n   */\r\n    checkAvailableArmorPieces( ): string {\r\n        var pos = utils.randomInt(arrayOfUnusedItems.length-1, 1);\r\n        let currentItem:string = arrayOfUnusedItems[pos]\r\n        arrayOfUnusedItems.splice(pos, 1)\r\n        return currentItem\r\n    }\r\n\r\n\r\n}","import { ArmorInterface } from \"./Armor\";\r\n\r\ninterface armorSetInterface {\r\n    [ name: string ]: ArmorInterface\r\n}\r\n\r\nexport let armorSet: armorSetInterface = {\r\n    chest: {\r\n        name: \"chest\",\r\n        armorValue: 100,\r\n        durability: 250,\r\n        weight: 15,\r\n    }\r\n    ,\r\n    ring: {\r\n        name: \"ring\",\r\n        armorValue: 0,\r\n        durability: 0,\r\n        weight: 1,\r\n    },\r\n    boots: {\r\n        name: \"boots\",\r\n        armorValue: 50,\r\n        durability: 100,\r\n        weight: 5,\r\n    },\r\n    belt: {\r\n        name: \"belt\",\r\n        armorValue: 30,\r\n        durability: 100,\r\n        weight: 3,\r\n    },\r\n    legs: {\r\n        name: \"legs\",\r\n        armorValue: 90,\r\n        durability: 250,\r\n        weight: 15,\r\n    },\r\n    shoulders: {\r\n        name: \"shoulders\",\r\n        armorValue: 70,\r\n        durability: 200,\r\n        weight: 10,\r\n    },\r\n    head: {\r\n        name: \"head\",\r\n        armorValue: 80,\r\n        durability: 220,\r\n        weight: 10,\r\n    },\r\n    hands: {\r\n        name: \"hands\",\r\n        armorValue: 60,\r\n        durability: 190,\r\n        weight: 4,\r\n    }\r\n}\r\n\r\n","import { utils } from \"../../Utils\";\r\nimport { Potion } from \"../item/potions/Potion\";\r\nimport { Weapon } from \"../item/weapons/Weapon\";\r\nimport { Item } from \"../item/Item\";\r\nimport { inventory } from \"../../index\";\r\nimport { Armor } from \"../item/armor/Armor\";\r\n\r\n\r\ninterface PlayerInterface {\r\n  health: number;\r\n  mana: number;\r\n  dexterity: number;\r\n  strength: number;\r\n  armor: Equipment;\r\n}\r\n\r\ninterface Equipment {\r\n  weapon: Weapon | null;\r\n  belt: Armor | null,\r\n  boots: Armor | null,\r\n  chest: Armor | null,\r\n  hands: Armor | null,\r\n  head: Armor | null,\r\n  legs: Armor | null,\r\n  ring: Armor | null,\r\n  shoulders: Armor | null\r\n}\r\n\r\nexport class Player implements PlayerInterface {\r\n  health: number = 100;\r\n  mana: number = 100;\r\n  dexterity: number = 10;\r\n  strength: number = 25;\r\n  armor: Equipment = {\r\n    weapon: null,\r\n    belt: null,\r\n    boots: null,\r\n    chest: null,\r\n    hands: null,\r\n    head: null,\r\n    legs: null,\r\n    ring: null,\r\n    shoulders: null\r\n  };\r\n  \r\n\r\n  constructor() {}\r\n  \r\n  /* \r\n   Checks the weapon equipped by the player and logs the calculated damage of the weapon\r\n   as well as the range of the attack\r\n   */\r\n  public attack(): void {\r\n    let usedWeapon = this.armor.weapon\r\n    let damage = this.calculateAttack( usedWeapon.damage )\r\n    utils.log( `Attacking with ${ usedWeapon.name } for ${ damage } with a range of ${ usedWeapon.range }` )\r\n  }\r\n\r\n  /* \r\n    Calculates some basic math to give a more realistic damage count\r\n   */\r\n  private calculateAttack( weaponAttack: number ): number{\r\n    return ( weaponAttack * this.strength ) / 10\r\n  }\r\n\r\n  /* \r\n    When Player consumes a potion from the inventory, reflects in \r\n    a stats modification\r\n   */\r\n  public drink( potion: Potion ): void {\r\n    this.incrementStats( potion.potion_type,  potion.value )\r\n  }\r\n  \r\n  /* \r\n   This functions checks everytime the player is about to consume a potion, \r\n   if the specific stats of the potion is needed to the player. If not, \r\n   it's not consumed and a log is sent to the console\r\n   */\r\n  public isFull( type:number ): boolean{\r\n    if( type == 1 && this.health >= 100 ){// Health\r\n      utils.log( \"Your health is maxed out\")\r\n      return true\r\n    } \r\n    else if ( type == 2 && this.mana >= 250 ){// Mana\r\n      utils.log( \"Your mana is maxed out\")\r\n      return true \r\n    } \r\n    else return false\r\n  }\r\n\r\n  /* \r\n   Equip function is responsible for understanding what type of item is being equipped\r\n   and with that unequiped previous item of that slot equipment ( if is not null ) and equip\r\n   the new one, after setsState to the inventory so the item trigger the render actions and \r\n   css classes of the equipped item\r\n   */\r\n  public equip( item: Weapon | Armor ): void {\r\n    if( item.type == \"weapon\" ){\r\n      if( this.armor.weapon ) this.armor.weapon.equipped = false\r\n      this.armor.weapon = item as Weapon\r\n    }\r\n    else if( item.type == \"armor\" ){\r\n      console.log(item)\r\n    } \r\n    item.equipped = true\r\n    inventory.setState({})\r\n    utils.log( `The ${ item.name } equipped` )\r\n  }\r\n   /* \r\n  An generic function made for increment or decrement the stats of the Player,\r\n  can be used for items, equips or weapons. It's written with a switch but\r\n  it should be changed in the future for something abstract\r\n   */\r\n  private incrementStats( type: number, value:number ): void {\r\n    switch( type ){\r\n      case 1:\r\n          this.health += value\r\n          utils.log( \"Health: \" + this.health )\r\n        break;\r\n      case 2:\r\n          this.mana += value\r\n          utils.log( \"Mana: \" + this.mana )\r\n        break;\r\n      case 3:\r\n        this.dexterity += value\r\n        utils.log( \"Dexterity: \" + this.dexterity )\r\n        break;\r\n      default: \r\n        utils.log( \"none of previous stats incrementStats()\")\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}